}
stopCluster(cl)
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果/',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2019'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果/',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
stopCluster(cl)
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2019'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
#sum by day=============================
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果fix//',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2019'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果/fix/',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2019'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
#sum by ship=============================
#sum by day=============================
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果/fix/',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
stopCluster(cl)
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2019'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
#sum by ship=============================
x<-foreach(i=1:file_num,.packages=c('data.table'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","distnm","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC","gap_hours"))
print(i)
dt = as.data.table(lapply(aresult[,5:39],sum,na.rm=TRUE))
dt=dt[,mmsi:=aresult[1,1]][,imo:=aresult[1,2]][,deadweight:=aresult[1,3]][,capacity:=aresult[1,4]]
dt=dt[,Total_FC:=sum(dt$ME_FC,dt$AE_FC,dt$AB_FC)]
dt=dt[,Total_CO2:=sum(dt$ME_CO2,dt$AE_CO2,dt$AB_CO2)]
dt=dt[,Total_SOx:=sum(dt$ME_SOx,dt$AE_SOx,dt$AB_SOx)]
dt=dt[,Total_BC:=sum(dt$ME_BC,dt$AE_BC,dt$AB_BC)]
dt=dt[,Total_NOx:=sum(dt$ME_NOx,dt$AE_NOx,dt$AB_NOx)]
dt=dt[,Total_CH4:=sum(dt$ME_CH4,dt$AE_CH4,dt$AB_CH4)]
dt=dt[,Total_N2O:=sum(dt$ME_N2O,dt$AE_N2O,dt$AB_N2O)]
dt=dt[,Total_PM10:=sum(dt$ME_PM10,dt$AE_PM10,dt$AB_PM10)]
dt=dt[,Total_PM2.5:=sum(dt$ME_PM2.5,dt$AE_PM2.5,dt$AB_PM2.5)]
dt=dt[,Total_NMVOC:=sum(dt$ME_NMVOC,dt$AE_NMVOC,dt$AB_NMVOC)]
dt=dt[,No:=i]
# fwrite(rbind(dt),paste('/Users/mizexin/论文数据/',AIS_year,'.csv',sep = ''),sep = ',',append = T)
fwrite(rbind(dt),paste('/Volumes/Samsung\ SSD/汇总结果/fix/',AIS_year,'.csv'),sep = ',',append = T)
}
stopCluster(cl)
gc()
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2020'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
#sum by ship=============================
x<-foreach(i=1:file_num,.packages=c('data.table'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","distnm","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC","gap_hours"))
print(i)
dt = as.data.table(lapply(aresult[,5:39],sum,na.rm=TRUE))
dt=dt[,mmsi:=aresult[1,1]][,imo:=aresult[1,2]][,deadweight:=aresult[1,3]][,capacity:=aresult[1,4]]
dt=dt[,Total_FC:=sum(dt$ME_FC,dt$AE_FC,dt$AB_FC)]
dt=dt[,Total_CO2:=sum(dt$ME_CO2,dt$AE_CO2,dt$AB_CO2)]
dt=dt[,Total_SOx:=sum(dt$ME_SOx,dt$AE_SOx,dt$AB_SOx)]
dt=dt[,Total_BC:=sum(dt$ME_BC,dt$AE_BC,dt$AB_BC)]
dt=dt[,Total_NOx:=sum(dt$ME_NOx,dt$AE_NOx,dt$AB_NOx)]
dt=dt[,Total_CH4:=sum(dt$ME_CH4,dt$AE_CH4,dt$AB_CH4)]
dt=dt[,Total_N2O:=sum(dt$ME_N2O,dt$AE_N2O,dt$AB_N2O)]
dt=dt[,Total_PM10:=sum(dt$ME_PM10,dt$AE_PM10,dt$AB_PM10)]
dt=dt[,Total_PM2.5:=sum(dt$ME_PM2.5,dt$AE_PM2.5,dt$AB_PM2.5)]
dt=dt[,Total_NMVOC:=sum(dt$ME_NMVOC,dt$AE_NMVOC,dt$AB_NMVOC)]
dt=dt[,No:=i]
# fwrite(rbind(dt),paste('/Users/mizexin/论文数据/',AIS_year,'.csv',sep = ''),sep = ',',append = T)
fwrite(rbind(dt),paste('/Volumes/Samsung\ SSD/汇总结果/fix/',AIS_year,'.csv'),sep = ',',append = T)
}
stopCluster(cl)
library(data.table)
library(doParallel)
library(dplyr)
library(doSNOW)
library(tcltk)
# 输入年份
AIS_year ='2020'
dir = paste("/Volumes/Samsung\ SSD/AIS/",AIS_year,"EM",sep = '')
file_list = list.files(path = dir, recursive = T, include.dirs = TRUE, full.names = T)
file_num <- length(file_list)
cl=makeCluster(10)
registerDoSNOW(cl)
# # bar =============================
# n <- file_num
#
# #Progress combine function
# f <- function(){
#   pb <- txtProgressBar(min=1, max=n-1,style=3)
#   count <- 0
#   function(...) {
#     count <<- count + length(list(...)) - 1
#     setTxtProgressBar(pb,count)
#     Sys.sleep(0.01)
#     flush.console()
#     c(...)
#   }
# }
# bar =============================
pb <- tkProgressBar(max=file_num)
progress <- function(n) setTkProgressBar(pb, n)
opts <- list(progress=progress)
x<-foreach(i=1:file_num,.packages=c('data.table','dplyr'),.options.snow=opts,.combine=rbind) %dopar% {
aresult=fread(paste(file_list[i],sep = ','),
select =c("mmsi","imo","deadweight","capacity","yday","distnm","gap_hours","ME_FC","AE_FC","AB_FC","ME_CO2","AE_CO2","AB_CO2","ME_SOx","AE_SOx","AB_SOx","ME_BC","AE_BC","AB_BC","ME_NOx","AE_NOx","AB_NOx","ME_CH4","AE_CH4","AB_CH4","ME_CO","AE_CO","AB_CO","ME_N2O","AE_N2O","AB_N2O","ME_PM10","AE_PM10","AB_PM10","ME_PM2.5","AE_PM2.5","AB_PM2.5","ME_NMVOC","AE_NMVOC","AB_NMVOC"))
if(nrow(aresult) != 0)
{
dt = as.data.table(aggregate(aresult[,6:40],by=list(aresult$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
dt = dt[,FC:=ME_FC+AE_FC+AB_FC][,CO2:=ME_CO2+AE_CO2+AB_CO2][,SOx:=ME_SOx+AE_SOx+AB_SOx][,BC:=ME_BC+AE_BC+AB_BC][,NOx:=ME_NOx+AE_NOx+AB_NOx][,CH4:=ME_CH4+AE_CH4+AB_CH4][,N2O:=ME_N2O+AE_N2O+AB_N2O][,PM10:=ME_PM10+AE_PM10+AB_PM10][,PM2.5:=ME_PM2.5+AE_PM2.5+AB_PM2.5][,NMVOC:=ME_NMVOC+AE_NMVOC+AB_NMVOC]
dt0 = dt[,.(yday,distnm,gap_hours,FC,CO2,SOx,BC,NOx,CH4,N2O,PM10,PM2.5,NMVOC)]
fwrite(rbind(dt0),paste('/Volumes/Samsung\ SSD/汇总结果/fix/',AIS_year,'yday.csv'),sep = ',',append = T)
}  }
stopCluster(cl)
gc()
library(data.table)
library(showtext)
library(ggplot2)
library(hrbrthemes)
library(dplyr)
showtext_auto()
# 读取两年的合并文件
# sum_2019=fread("~/论文数据/2019.csv",sep = ',')
sum_2019=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2019.csv",sep = ',')
sum_2019 = sum_2019[,year:=2019]
# 新加一列表示年份
# sum_2020=fread("~/论文数据/2020.csv",sep = ',')
sum_2020=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2020.csv",sep = ',')
sum_2020 = sum_2020[,year:=2020]
# sum_dt  = rbind(sum_2019,sum_2020)
rm(sum_2019,sum_2020)
# 只保留带有载重量的数据
sum_dt  = sum_dt[complete.cases(sum_dt[,capacity]),]
# 划分大小
sum_dt=sum_dt[,size_bin:=fcase(capacity%between%c(0,999),1,
capacity%between%c(1000,1999),2,
capacity%between%c(2000,2999),3,
capacity%between%c(3000,4999),4,
capacity%between%c(5000,7999),5,
capacity%between%c(8000,11999),6,
capacity%between%c(12000,14499),7,
capacity%between%c(14500,19999),8,
capacity>=20000,9)]
library(data.table)
library(showtext)
library(ggplot2)
library(hrbrthemes)
library(dplyr)
showtext_auto()
# 读取两年的合并文件
# sum_2019=fread("~/论文数据/2019.csv",sep = ',')
sum_2019=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2019.csv",sep = ',')
sum_2019 = sum_2019[,year:=2019]
# 新加一列表示年份
# sum_2020=fread("~/论文数据/2020.csv",sep = ',')
sum_2020=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2020.csv",sep = ',')
sum_2020 = sum_2020[,year:=2020]
# sum_dt  = rbind(sum_2019,sum_2020)
rm(sum_2019,sum_2020)
library(data.table)
library(showtext)
library(ggplot2)
library(hrbrthemes)
library(dplyr)
showtext_auto()
# 读取两年的合并文件
# sum_2019=fread("~/论文数据/2019.csv",sep = ',')
sum_2019=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2019.csv",sep = ',')
sum_2019 = sum_2019[,year:=2019]
# 新加一列表示年份
# sum_2020=fread("~/论文数据/2020.csv",sep = ',')
sum_2020=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2020.csv",sep = ',')
sum_2020 = sum_2020[,year:=2020]
sum_dt  = rbind(sum_2019,sum_2020)
rm(sum_2019,sum_2020)
# 只保留带有载重量的数据
sum_dt  = sum_dt[complete.cases(sum_dt[,capacity]),]
# 划分大小
sum_dt=sum_dt[,size_bin:=fcase(capacity%between%c(0,999),1,
capacity%between%c(1000,1999),2,
capacity%between%c(2000,2999),3,
capacity%between%c(3000,4999),4,
capacity%between%c(5000,7999),5,
capacity%between%c(8000,11999),6,
capacity%between%c(12000,14499),7,
capacity%between%c(14500,19999),8,
capacity>=20000,9)]
#  船舶尺寸——二氧化碳
# 单位万吨
CO2_size_bin = aggregate(sum_dt$Total_CO2,by=list(sum_dt$size_bin,sum_dt$year),sum)%>%rename(.,'capacity'= 'Group.1','year'= 'Group.2','CO2' = 'x')
CO2_size_bin$CO2  = CO2_size_bin$CO2/1000000000
CO2_size_bin[,2] = as.character(CO2_size_bin$year)
CO2_size_bin %>%
ggplot(aes(fill=year,x=capacity, y=CO2)) +
geom_bar(position="dodge", stat="identity",width=0.7,alpha=0.7) +
scale_x_continuous(breaks = seq(1, 9, 1)) +
scale_fill_manual(values = c("#3498db", "#1abc9c")) +
ylab(label = 'CO2/万吨') +
xlab(label = '船舶尺寸')#+ theme_bw()
# 船舶尺寸-航程
# 单位万海里
distnm_size_bin = aggregate(sum_dt$distnm,by=list(sum_dt$size_bin,sum_dt$year),sum)%>%rename(.,'capacity'= 'Group.1','year'= 'Group.2','distnm' = 'x')
distnm_size_bin[,2] = as.character(distnm_size_bin$year)
distnm_size_bin$distnm  = distnm_size_bin$distnm/10000
distnm_size_bin %>%
ggplot(aes(fill=year,x=capacity, y=distnm)) +
geom_bar(position="dodge", stat="identity",width=0.7,alpha=0.7) +
scale_x_continuous(breaks = seq(1, 9, 1)) +
scale_fill_manual(values = c("#3498db", "#1abc9c")) +
ylab(label = '航程/万海里') +
xlab(label = '船舶尺寸')#+ theme_bw()
# 船舶尺寸-航程
# 单位万海里
hours_size_bin = aggregate(sum_dt$gap_hours,by=list(sum_dt$size_bin,sum_dt$year),sum)%>%rename(.,'capacity'= 'Group.1','year'= 'Group.2','hours' = 'x')
hours_size_bin[,2] = as.character(distnm_size_bin$year)
hours_size_bin$hours  = hours_size_bin$hours/10000
hours_size_bin %>%
ggplot(aes(fill=year,x=capacity, y=hours)) +
geom_bar(position="dodge", stat="identity",width=0.7,alpha=0.7) +
scale_x_continuous(breaks = seq(1, 9, 1)) +
scale_fill_manual(values = c("#3498db", "#1abc9c")) +
ylab(label = '运营时间/万小时') +
xlab(label = '船舶尺寸')#+ theme_bw()
gc()
# yday2019=fread("~/论文数据/2019yday.csv",sep = ',')%>%na.omit(.)
yday2019=fread("/Volumes/Samsung\ SSD/汇总结果/2019yday.csv",fill=TRUE)%>%na.omit(.)
yday2019 = as.data.table(aggregate(yday2019[,2:13],by=list(yday2019$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
yday2019 = yday2019[,year:=2019]
# yday2020=fread("~/论文数据/2020yday.csv",sep = ',')%>%na.omit(.)
yday2020=fread("/Volumes/Samsung\ SSD/汇总结果/2020yday.csv",fill=TRUE)%>%na.omit(.)
yday2020 = as.data.table(aggregate(yday2020[,2:13],by=list(yday2020$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
yday2020 = yday2020[,year:=2020]
View(yday2019)
yday_dt =  rbind(yday2019,yday2020)
yday_dt$year = as.character(yday_dt$year)
yday_dt[,4:13]=yday_dt[,4:13]/1000000 # 单位吨
yday_dt %>%
ggplot( aes(x=as.integer(x = yday),group = year, y = FC, color= year)) +
geom_line() +
ggtitle("") +
theme_ipsum() +
ylab("FC") +
geom_abline(intercept = 130000)+
geom_abline(intercept = 80000)+
# geom_label( x=1990, y=55000, label="Amanda reached 3550\nbabies in 1970", size=4, color="#69b3a2") +
theme( )
gc()
# yday2019=fread("~/论文数据/2019yday.csv",sep = ',')%>%na.omit(.)
yday2019=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2019yday.csv",fill=TRUE)%>%na.omit(.)
yday2019 = as.data.table(aggregate(yday2019[,2:13],by=list(yday2019$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
yday2019 = yday2019[,year:=2019]
# yday2020=fread("~/论文数据/2020yday.csv",sep = ',')%>%na.omit(.)
yday2020=fread("/Volumes/Samsung\ SSD/汇总结果/fix/2020yday.csv",fill=TRUE)%>%na.omit(.)
yday2020 = as.data.table(aggregate(yday2020[,2:13],by=list(yday2020$yday),sum)%>%
rename(.,'yday'= 'Group.1'))
yday2020 = yday2020[,year:=2020]
yday_dt =  rbind(yday2019,yday2020)
yday_dt$year = as.character(yday_dt$year)
yday_dt[,4:13]=yday_dt[,4:13]/1000000 # 单位吨
yday_dt %>%
ggplot( aes(x=as.integer(x = yday),group = year, y = FC, color= year)) +
geom_line() +
ggtitle("") +
theme_ipsum() +
ylab("FC") +
geom_abline(intercept = 130000)+
geom_abline(intercept = 80000)+
# geom_label( x=1990, y=55000, label="Amanda reached 3550\nbabies in 1970", size=4, color="#69b3a2") +
theme( )
yday_dt %>%
ggplot( aes(x=as.integer(x = yday),group = year, y = FC, color= year)) +
geom_line() +
ggtitle("") +
theme_ipsum() +
ylab("FC") +
# geom_label( x=1990, y=55000, label="Amanda reached 3550\nbabies in 1970", size=4, color="#69b3a2") +
theme( )
usethis::use_git()
git_add()
usethis::git_add()
usethis::use_git()
git_status
